---
# fullnameOverride: ""
# nameOverride: ""

global:
  labels:

# Controller configuration
logLevel: info  # Options: debug, info, warn, error
scanInterval: 60s
image:
  repository: ghcr.io/kristeey/workload-identity-labeler
  tag: v0.0.1
  pullPolicy: IfNotPresent

serviceAccount:
  # Specify whether a service account should be created.
  enabled: true
  # The name of the service account to use. If not set, the name will be derived from the chart name.
  name: ""
  # Annotations to add to the service account.
  annotations:
  # Labels to add to the service account.
  labels:

deployment:
  # Labels to add to the deployment.
  labels:
  # Annotations to add to the deployment.
  annotations:
  # Additional environment variables to add to the deployment.
  env:
    # - MY_ENV_VAR: "value"

pod:
  # Labels to add to the pod.
  labels:
  # Annotations to add to the pod.
  annotations:

azure:
  # REQUIRED: Azure subscription ID where controller will look for ServiceAccounts.
  subscriptionId: ""

  ### AUTHENTICATION OPTIONS ###
  # These options are used to authenticate the controller with Azure.

  # REQUIRED: Authentication mode to use for the controller.
  # Available options:
  # - "workload-identity": Uses Azure workload identity to authenticate.
  # - "service-principal": Uses Azure service principal authentication with client ID and secret.
  authMode: "workload-identity"

  # REQUIRED: Azure client ID. This is the client ID of the Azure service principal or managed identity
  # that the controller will use to authenticate with Azure.
  clientId:

  # OPTIONAL: Azure client secret. Only required if `authMode` is set to
  # `service-principal`. Populates the `AZURE_CLIENT_SECRET` env var.
  # Not recommended to be set directly in the values file. It is better to use
  # a Kubernetes secret for this value and reference it as an environment
  # variable in the deployment.
  clientSecret:

  # OPTIONAL: Azure tenant ID, used for authentication. Not needed if running on Azure Kubernetes Service (AKS),
  # as the AKS cluster will automatically use the tenant ID where the cluster is created.
  tenantId:
